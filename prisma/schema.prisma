generator client {
  provider = "prisma-client-js"
}

generator pothos {
  provider = "prisma-pothos-types"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email     String?  @unique
  image     String?
  role      Role     @default(USER)
}

enum Role {
  USER
  ADMIN
}

model Expend {
  id              Int           @id @default(autoincrement())
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  price           Int
  description     String
  date            String
  category        Category      @relation(fields: [categoryId], references: [id])
  categoryId      Int
  payer           Payer         @relation(fields: [payerId], references: [id])
  payerId         Int
  budget          Budget        @relation(fields: [budgetId], references: [id])
  budgetId        Int
  paymentMethod   PaymentMethod @relation(fields: [paymentMethodId], references: [id])
  paymentMethodId Int
  processed       Boolean       @default(false)
}

model Category {
  id        Int      @id @default(autoincrement())
  code      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  limit     Int      @default(0)
  Expend    Expend[]
}

model Payer {
  id                Int                   @id @default(autoincrement())
  code              String                @unique
  createdAt         DateTime              @default(now())
  updatedAt         DateTime              @updatedAt
  name              String
  Expend            Expend[]
  PayerCountingItem PayerOnCountingItem[]
}

model PayerOnCountingItem {
  id             Int          @id @default(autoincrement())
  payer          Payer        @relation(fields: [payerId], references: [id])
  payerId        Int
  countingItemId Int
  countingItem   CountingItem @relation(fields: [countingItemId], references: [id])
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt

  @@unique([payerId, countingItemId])
}

model Budget {
  id                   Int                    @id @default(autoincrement())
  code                 String                 @unique
  createdAt            DateTime               @default(now())
  updatedAt            DateTime               @updatedAt
  name                 String
  Expend               Expend[]
  BudgetOnCountingItem BudgetOnCountingItem[]
}

model BudgetOnCountingItem {
  id             Int          @id @default(autoincrement())
  budget         Budget       @relation(fields: [budgetId], references: [id])
  budgetId       Int
  countingItemId Int
  countingItem   CountingItem @relation(fields: [countingItemId], references: [id])
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt

  @@unique([budgetId, countingItemId])
}

model PaymentMethod {
  id                        Int                           @id @default(autoincrement())
  code                      String                        @unique
  createdAt                 DateTime                      @default(now())
  updatedAt                 DateTime                      @updatedAt
  name                      String
  Expend                    Expend[]
  PaymentMethodCountingItem PaymentMethodOnCountingItem[]
}

model PaymentMethodOnCountingItem {
  id              Int           @id @default(autoincrement())
  paymentMethod   PaymentMethod @relation(fields: [paymentMethodId], references: [id])
  paymentMethodId Int
  countingItemId  Int
  countingItem    CountingItem  @relation(fields: [countingItemId], references: [id])
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt

  @@unique([paymentMethodId, countingItemId])
}

model CountingItem {
  id             Int                           @id @default(autoincrement())
  createdAt      DateTime                      @default(now())
  updatedAt      DateTime                      @updatedAt
  name           String
  code           String                        @unique
  processed      Boolean[]                     @default([])
  paymentMethods PaymentMethodOnCountingItem[]
  budgets        BudgetOnCountingItem[]
  payers         PayerOnCountingItem[]
}
